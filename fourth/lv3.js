var a = {n:1}// 创建了一个对象 a，其中包含一个属性 n，值为1。

var b = a// 将变量 b 指向了对象 a 引用的对象。

a.x = a = {n:2} //创建了一个新的对象，并且 a 被赋值为这个新对象。在新对象上添加了一个属性 x，其值为新对象的引用，但由于赋值操作的顺序，a.x 实际上是在原始对象上添加的，因为在执行 a.x = ... 时，a 还指向原始对象。
console.log(a) //打印当前的 a 对象，此时 a 指向的是 {n:2}，所以输出 { n: 2 }。

console.log(b) //打印 b 指向的对象，由于 b 指向的是 a 原始指向的对象，并且在第三步中，原始对象被添加了属性 x，其值为新对象 {n:2}，所以输出 { n: 1, x: { n: 2 } }。

a.n = 3//将 a 对象的 n 属性值改为3。

console.log(b) //再次打印 b 指向的对象，由于 b 指向的是 a 原始指向的对象，而 a.x 指向的是新对象，所以 b 指向的对象的 x 属性中的 n 值变为3，所以输出 { n: 1, x: { n: 3 } }。
//输出结果为：
// { n: 2 }
//{ n: 1, x: { n: 2 } }
//{ n: 1, x: { n: 3 } }